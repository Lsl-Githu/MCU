#ifndef _TFont_h
#define _TFont_h
/************************************************* 
 File name: TFont.h// 文件名
 Author: LiShuangLong  
 Version:V1.1 Date: 2023.4.20// 作者、版本及完成日期
 Description: tft显示相关程序// 用于详细说明此程序文件完成的主要功能，与其他模块
 Others: 无   // 其它内容的说明
 Function List: void Tft_Display();//根据接收数据显示函数  
 void Show_CH_Font16(int x,int y,int FontPos);//汉字选取函数
 // 主要函数列表，每条记录应包括函数名及功能简要说明
*************************************************/

#include <avr/pgmspace.h> 
#include <UTFT.h>
#include "wifi.h"
UTFT myGLCD(QD_TFT180A, A2, A1, A5, A4, A3);  //TFT引脚选择

//tft相关的字符库数组
extern uint8_t SmallFont[];
extern uint8_t BigFont[];
extern uint8_t SevenSegNumFont[];

//口味用于对比使用
const char *p1 = "微辣";
const char *p2 = "中辣";
const char *p3 = "特辣";


//tft汉字字库管理：逐列式，顺向 宋体 
const char tfont16[] PROGMEM =
{
0x00,0x00,0x02,0x02,0x42,0x22,0x22,0x22,0x1A,0x22,0x02,0x22,0x02,0x22,0xFE,0x22,
0x02,0x22,0x02,0x22,0x0A,0x22,0x12,0x22,0x63,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,/*"当",0*/
0x10,0x00,0x10,0x00,0x17,0xFF,0x94,0x90,0x74,0x92,0x14,0x91,0x17,0xFE,0x10,0x00,
0x10,0x00,0x13,0xF0,0x30,0x02,0xD0,0x01,0x17,0xFE,0x10,0x00,0x10,0x00,0x00,0x00,/*"前",1*/
0x02,0x00,0x02,0x00,0x42,0x00,0x33,0xFE,0x00,0x04,0x00,0x08,0x20,0x00,0x20,0x00,
0x20,0x02,0x20,0x01,0x3F,0xFE,0x20,0x00,0x20,0x00,0x20,0x00,0x20,0x00,0x00,0x00,/*"订",2*/
0x00,0x08,0x00,0x08,0x1F,0xC8,0x92,0x48,0x52,0x48,0x32,0x48,0x12,0x48,0x1F,0xFF,
0x12,0x48,0x32,0x48,0x52,0x48,0x92,0x48,0x1F,0xC8,0x00,0x08,0x00,0x08,0x00,0x00,/*"单",3*/

0x00,0x80,0x01,0x00,0x06,0x00,0x1F,0xFF,0xE0,0x00,0x01,0x01,0x02,0x02,0x0D,0x0C,
0x71,0xF0,0x01,0x00,0x01,0x02,0xE1,0x01,0x19,0xFE,0x06,0x00,0x01,0x00,0x00,0x00,/*"份",4*/
0x08,0x80,0x11,0x00,0x23,0xFF,0xCC,0x01,0x01,0x02,0x79,0x7C,0x09,0x40,0xF9,0x40,
0x09,0x7C,0x79,0x08,0x04,0x11,0x1B,0xE6,0xE8,0x18,0x0F,0xE6,0x08,0x01,0x00,0x00,/*"微",5*/

0x00,0x00,0x00,0x00,0x0F,0xF0,0x08,0x20,0x08,0x20,0x08,0x20,0x08,0x20,0xFF,0xFF,
0x08,0x20,0x08,0x20,0x08,0x20,0x08,0x20,0x0F,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,/*"中",6*/

0x02,0x40,0x3C,0x60,0x08,0x40,0xFF,0xFF,0x08,0x80,0x08,0x80,0x02,0x00,0x12,0x40,
0x12,0x50,0x12,0x48,0xFE,0x42,0x12,0x41,0x13,0xFE,0x12,0x40,0x02,0x40,0x00,0x00,/*"特",7*/

0x11,0x21,0x15,0x22,0x93,0x2C,0x71,0xF0,0x13,0x20,0x15,0x20,0x00,0x04,0x27,0x88,
0x24,0x90,0x24,0xA0,0xFF,0xFF,0x24,0xA0,0x24,0x90,0x27,0x88,0x00,0x04,0x00,0x00,/*"辣",8*/

0x02,0x40,0x3C,0x60,0x08,0x40,0xFF,0xFF,0x08,0x80,0x08,0x80,0x02,0x00,0x12,0x40,
0x12,0x50,0x12,0x48,0xFE,0x42,0x12,0x41,0x13,0xFE,0x12,0x40,0x02,0x40,0x00,0x00,/*"特",9*/
0x04,0x00,0x08,0x00,0x17,0xFC,0x24,0x42,0xE4,0x42,0x24,0x42,0x24,0x42,0x27,0xC2,
0x24,0x42,0x2C,0x42,0x34,0x42,0x04,0x42,0x07,0xC2,0x00,0x02,0x00,0x1E,0x00,0x00,/*"色",10*/
0x02,0x02,0x04,0x02,0x0F,0xF2,0x14,0x92,0x24,0x92,0xE4,0x92,0x24,0x92,0x27,0xF2,
0x24,0x92,0x2C,0x92,0x34,0x92,0x04,0x92,0x07,0xF2,0x00,0x02,0x00,0x02,0x00,0x00,/*"鱼",11*/
0x00,0x81,0x00,0x81,0x08,0x82,0x06,0x82,0x20,0x84,0x18,0x88,0x00,0x90,0x00,0xE0,
0xFF,0x80,0x00,0xA0,0x00,0x90,0x00,0x88,0x00,0x84,0x00,0x83,0x00,0x80,0x00,0x00,/*"头",12*/

0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,
0x40,0x00,0x7F,0xC0,0x02,0x30,0x05,0x08,0x08,0x84,0x10,0x42,0x00,0x0F,0x00,0x00,/*"飞",13*/
0x00,0x00,0x00,0x01,0x20,0x02,0x20,0x04,0x20,0x18,0x20,0x60,0x3F,0x80,0x20,0x00,
0x20,0x00,0x20,0x02,0x20,0x01,0x20,0x02,0x3F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,/*"刀",14*/
0x00,0x40,0x02,0x40,0x04,0x40,0x78,0x40,0x08,0x40,0x08,0x40,0x08,0x40,0xFF,0xFF,
0x08,0x40,0x08,0x40,0x08,0x40,0x08,0x40,0x08,0x40,0x00,0x40,0x00,0x40,0x00,0x00,/*"牛",15*/
0x00,0x00,0x1F,0xFF,0x10,0x00,0x10,0x80,0x11,0x04,0x12,0x08,0x14,0x30,0xF9,0xC0,
0x14,0x20,0x12,0x18,0x11,0x00,0x10,0x02,0x10,0x01,0x1F,0xFE,0x00,0x00,0x00,0x00,/*"肉",16*/

0x02,0x80,0x0C,0x80,0xF7,0xFE,0x24,0x84,0x24,0x88,0x00,0x00,0x00,0xFF,0x7C,0x88,
0x44,0x90,0x44,0xA0,0x47,0xC0,0x44,0xA0,0x44,0x9A,0x7C,0x81,0x00,0xFE,0x00,0x00,/*"锅",17*/
0x02,0x00,0x04,0x00,0x08,0x00,0x37,0xFC,0xE4,0x42,0x24,0x42,0x24,0x42,0x24,0x42,
0x27,0xC2,0x20,0x22,0x20,0x12,0x3F,0xE2,0x00,0x02,0x00,0x0E,0x00,0x00,0x00,0x00,/*"包",18*/


0x00,0x00,0x00,0x01,0x00,0x06,0x00,0x18,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x7E,0x00,0x01,0xC0,0x00,0x30,0x00,0x0C,0x00,0x02,0x00,0x01,0x00,0x00,/*"八",19*/
0x01,0x00,0x06,0x00,0x1F,0xFF,0xE0,0x00,0x00,0x00,0x0F,0xFC,0x00,0x04,0x00,0x04,
0x00,0x04,0xFF,0xFC,0x00,0x04,0x00,0x04,0x00,0x04,0x0F,0xFE,0x00,0x00,0x00,0x00,/*"仙",20*/
0x02,0x00,0x02,0x02,0x42,0x04,0x33,0xF8,0x00,0x04,0x10,0x02,0x12,0x02,0x11,0x82,
0x10,0x02,0x10,0x12,0x10,0x0A,0xFF,0xF2,0x10,0x02,0x10,0x02,0x10,0x02,0x00,0x00,/*"过",21*/
0x08,0x20,0x06,0x20,0x40,0x3E,0x30,0xC0,0x03,0x00,0x08,0x80,0x10,0xB8,0xEF,0xC8,
0x28,0x88,0x2A,0xAA,0x29,0x99,0x28,0x8A,0x2F,0xFC,0x20,0x88,0x00,0x80,0x00,0x00,/*"海",22*/

0x08,0x20,0x08,0xC0,0x0B,0x00,0xFF,0xFF,0x09,0x00,0x08,0xC0,0x10,0x00,0x13,0xFC,
0x12,0x00,0x92,0x00,0x5F,0xFF,0x12,0x08,0x12,0x04,0x13,0xF8,0x10,0x00,0x00,0x00,/*"柿",23*/
0x01,0x00,0x41,0x00,0x41,0x00,0x41,0x00,0x41,0x00,0x41,0x02,0x41,0x01,0x47,0xFE,
0x45,0x00,0x49,0x00,0x51,0x00,0x61,0x00,0x41,0x00,0x01,0x00,0x01,0x00,0x00,0x00,/*"子",24*/
0x10,0x04,0x12,0x08,0x11,0x30,0x10,0xC0,0x13,0x20,0x1C,0x18,0x00,0x00,0x00,0x08,
0x3F,0xC8,0x60,0x48,0xA8,0x48,0x22,0x4A,0x21,0x49,0x3E,0x42,0x00,0x7C,0x00,0x00,/*"鸡",25*/
0x01,0x00,0x82,0x02,0x84,0x03,0xB8,0xFA,0x84,0x92,0x82,0x92,0x82,0x92,0xFF,0xFE,
0x92,0x92,0x92,0x92,0x92,0x92,0x92,0xF2,0x92,0x06,0xC2,0x03,0x02,0x00,0x00,0x00,/*"蛋",26*/
0x08,0x40,0x08,0x42,0x08,0x81,0xFF,0xFE,0x09,0x00,0x02,0x02,0x08,0x0C,0x08,0xF1,
0x0F,0x01,0xF9,0xC2,0x09,0x34,0x89,0x08,0x69,0x34,0x09,0xC2,0x08,0x01,0x00,0x00,/*"拔",27*/
0x00,0x02,0x06,0x12,0x0A,0x32,0x32,0x52,0xC2,0x92,0x03,0x12,0x0C,0x12,0x00,0x02,
0x06,0x12,0x0A,0x32,0x32,0x52,0xC2,0x92,0x03,0x12,0x0C,0x12,0x00,0x02,0x00,0x00,/*"丝",28*/
0x04,0x00,0x04,0x01,0x7C,0x12,0x04,0x94,0xF8,0x90,0x29,0xB2,0x2A,0xB1,0x00,0xDE,
0xF8,0xD0,0x24,0x90,0x25,0x14,0x24,0x32,0x44,0x19,0x1C,0x00,0x00,0x00,0x00,0x00,/*"紫",29*/
0x40,0x44,0x40,0x44,0x5C,0x48,0x55,0x48,0xF5,0x5F,0x5D,0x55,0x57,0xF5,0x55,0x75,
0x55,0x55,0x5D,0x55,0xF4,0xD5,0x55,0x5F,0x5C,0x40,0x40,0x40,0x40,0x40,0x00,0x00,/*"薯",30*/
0x00,0x01,0x7F,0xFE,0x44,0x40,0x44,0x41,0x7F,0xFF,0x02,0x00,0x12,0x00,0x12,0xFF,
0xFE,0x92,0x12,0x92,0x12,0x92,0x12,0x92,0xFE,0x92,0x12,0xFF,0x12,0x00,0x00,0x00,/*"腊",31*/
0x00,0x00,0x00,0x01,0x00,0x06,0x00,0x18,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x7E,0x00,0x01,0xC0,0x00,0x30,0x00,0x0C,0x00,0x02,0x00,0x01,0x00,0x00,/*"八",32*/
0x08,0x40,0x08,0x42,0x08,0x81,0xFF,0xFE,0x09,0x00,0x10,0x10,0x11,0x10,0x11,0x10,
0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0x11,0x10,0x11,0x10,0x10,0x10,0x00,0x00,/*"排",33*/
0x01,0x00,0x06,0x00,0x04,0x00,0xFD,0xFF,0xA5,0x50,0xA5,0x50,0xA5,0x50,0xA5,0x50,
0xBD,0x50,0x85,0x52,0x85,0x51,0xFD,0xFE,0x04,0x00,0x05,0x00,0x06,0x00,0x00,0x00,/*"骨",34*/
0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,0x02,0xFF,0xFE,0x02,0x02,
0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x00,0x02,0x00,0x02,0x00,0x00,/*"上",35*/
0x08,0x20,0x06,0x20,0x40,0x7E,0x31,0x80,0x00,0x04,0x00,0x08,0x42,0x31,0x47,0xC2,
0x4A,0x04,0x52,0x18,0x63,0xE2,0x42,0x01,0x02,0x02,0x03,0xFC,0x00,0x00,0x00,0x00,/*"汤",36*/
0x00,0x40,0x02,0x40,0x04,0x40,0x78,0x40,0x08,0x40,0x08,0x40,0x08,0x40,0xFF,0xFF,
0x08,0x40,0x08,0x40,0x08,0x40,0x08,0x40,0x08,0x40,0x00,0x40,0x00,0x40,0x00,0x00,/*"牛",37*/



};


//汉字选取扫描
void Show_CH_Font16(int x,int y,int FontPos)
{
  char temp, t, t1, k;
	int y0 = y;	
	int HZnum;

  //每个16*16的汉字点阵 有32个字节
  for (t = 0; t < 32; t++)
  {   
    temp = pgm_read_byte(&tfont16[t + 32*FontPos]);
                       
	  for (t1 = 0; t1 < 8; t1++)
	  {   
      if (temp&0x80)
      { 
        myGLCD.setColor(255,0, 0);//字体红色FontColor
        myGLCD.drawPixel(x,y);
      }
      else 
      { 
        myGLCD.setColor(255, 255, 255);//白色底BackColor
        myGLCD.drawPixel(x,y);
      }

      temp <<= 1;
      y++;

      if ((y - y0) == 16)
      {
        y = y0;
        x++;
        break;
      }
	     
	  }  	 
	}   
 
}


/*tft显示屏初始化*/
void Display_Init()
{
  randomSeed(analogRead(0));
  myGLCD.InitLCD();
  myGLCD.setFont(SmallFont);//*字符库
  
  /*myGLCD.clrScr();//清屏 
  myGLCD.fillScr(255, 255, 255);//全屏白色
  //显示字符串，x,y
  myGLCD.print("Color Test", CENTER, 30);
  //数字显示:12, x, y, len  
  //myGLCD.printNumI(12, 10, 50, 4);
  delay(1000);*/
  myGLCD.clrScr();//清屏 
  myGLCD.fillScr(255, 255, 255);//全屏白色
}

void hanzi_xz(int Num, int id, int wz)
{

  switch (id)
  {
    case 1:
    {
        Show_CH_Font16(0, wz, 9);//特色鱼头
        Show_CH_Font16(16, wz, 10);
        Show_CH_Font16(32, wz, 11);
        Show_CH_Font16(48, wz, 12);
        myGLCD.print(":", 64, wz+1); //显示字符串，x,y
        myGLCD.printNumI(Num, 72, wz+1, 1);//数字显示:12,x,y,len 
    }break;
    
    case 2:
    {
        Show_CH_Font16(0, wz, 13);//飞刀牛肉
        Show_CH_Font16(16, wz, 14);
        Show_CH_Font16(32, wz, 15);
        Show_CH_Font16(48, wz, 16);
        myGLCD.print(":", 64, wz+1); //显示字符串，x,y
        myGLCD.printNumI(Num, 72, wz+1, 1);//数字显示:12,x,y,len 
    }break;

    case 3:
    {
        Show_CH_Font16(0, wz, 17);//锅包肉
        Show_CH_Font16(16, wz, 18);
        Show_CH_Font16(32, wz, 16);
        myGLCD.print(":", 64, wz+1); //显示字符串，x,y
        myGLCD.printNumI(Num, 72, wz+1, 1);//数字显示:12,x,y,len 
    }break;

    case 4:
    {
        Show_CH_Font16(0, wz, 19);//八仙过海
        Show_CH_Font16(16, wz, 20);
        Show_CH_Font16(32, wz, 21);
        Show_CH_Font16(48, wz, 22);
        myGLCD.print(":", 64, wz+1); //显示字符串，x,y
        myGLCD.printNumI(Num, 72, wz+1, 1);//数字显示:12,x,y,len 
    }break;

    case 5:
    {
        Show_CH_Font16(0, wz, 23);//柿子鸡蛋
        Show_CH_Font16(16, wz, 24);
        Show_CH_Font16(32, wz, 25);
        Show_CH_Font16(48, wz, 26);
        myGLCD.print(":", 64, wz+1); //显示字符串，x,y
        myGLCD.printNumI(Num, 72, wz+1, 1);//数字显示:12,x,y,len 
    }break;
        
    case 6:
    {
        Show_CH_Font16(0, wz, 27);//拔丝紫薯
        Show_CH_Font16(16, wz, 28);
        Show_CH_Font16(32, wz, 29);
        Show_CH_Font16(48, wz, 30);
        myGLCD.print(":", 64, wz+1); //显示字符串，x,y
        myGLCD.printNumI(Num, 72, wz+1, 1);//数字显示:12,x,y,len         
    }break;
    
    case 7:
    {
        Show_CH_Font16(0, wz, 31);//腊八排骨
        Show_CH_Font16(16, wz, 32);
        Show_CH_Font16(32, wz, 33);
        Show_CH_Font16(48, wz, 34);
        myGLCD.print(":", 64, wz+1); //显示字符串，x,y
        myGLCD.printNumI(Num, 72, wz+1, 1);//数字显示:12,x,y,len         
    }break;
        
    case 8:
    {
        Show_CH_Font16(0, wz, 35);//上汤牛肉
        Show_CH_Font16(16, wz, 36);
        Show_CH_Font16(32, wz, 37);
        Show_CH_Font16(48, wz, 16);
        myGLCD.print(":", 64, wz+1); //显示字符串，x,y
        myGLCD.printNumI(Num, 72, wz+1, 1);//数字显示:12,x,y,len         
    }break;

  }

}

/*tft显示接收数据*/
void Tft_Display()
{
     
  static int wz = 16;
  //显示汉字：x,y,id
  Show_CH_Font16(32, 0, 0);
  Show_CH_Font16(48, 0, 1);
  Show_CH_Font16(64, 0, 2);
  Show_CH_Font16(80, 0, 3);
  char temp = 0;           
  if (xs_flag)
  {
    myGLCD.clrScr();//清屏 
    myGLCD.fillScr(255, 255, 255);//全屏白色
  /*for (char j = 0; j < 8; j++)
    {   
      if (REcv_Data[j].num > 0)
      {
        REcv_Data2[temp++] = REcv_Data[j];
        Serial.println(REcv_Data[j].num);
        Serial.println(REcv_Data[j].KWrr);
        Serial.println(REcv_Data[j].Id);
      }
      
    }*/

    wz = 16;
    for (char i = 0; i < 8; i++)
    {
      if(REcv_Data[i].num > 0)
      {
          hanzi_xz(REcv_Data[i].num,REcv_Data[i].Id, wz);
          if(REcv_Data[i].KWrr == p1     ) Show_CH_Font16(80, wz, 5);//微辣
          else if(REcv_Data[i].KWrr == p2) Show_CH_Font16(80, wz, 6);//中辣
          else if(REcv_Data[i].KWrr == p3) Show_CH_Font16(80, wz, 7);//特辣
          Show_CH_Font16(96, wz, 8);//辣
          wz += 16;
      }
        
    }

    for (char i = 0; i < 8; i++)
    { 

      REcv_Data[i].num = 0;
      REcv_Data[i].Id = 0;
      REcv_Data[i].KWrr = "";

    }
 
    xs_flag = 0;
    XS_fg = 1;
          
  }
      
}

#endif
